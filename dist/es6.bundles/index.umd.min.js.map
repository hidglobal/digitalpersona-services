{"version":3,"file":"index.umd.min.js","sources":["../es6/common/resource.js","../es6/services/auth/status.js","../es6/services/claims/claim.js","../es6/services/enroll/attribute.js","../es6/services/policy/stepUp.js","../es6/common/errors.js","../es6/private/url.js","../es6/private/endpoint.js","../es6/private/service.js","../es6/services/auth/service.js","../es6/services/auth/data.js","../es6/services/claims/service.js","../es6/services/enroll/service.js","../es6/services/policy/service.js","../es6/services/secrets/service.js"],"sourcesContent":["/**\r\n * Enumerates supported resource actions.\r\n */\r\nexport var ResourceActions;\r\n(function (ResourceActions) {\r\n    /** Reading of a resource. */\r\n    ResourceActions[ResourceActions[\"Read\"] = 0] = \"Read\";\r\n    /** Modifying a resource. */\r\n    ResourceActions[ResourceActions[\"Write\"] = 1] = \"Write\";\r\n    /** Deleting a resource. */\r\n    ResourceActions[ResourceActions[\"Delete\"] = 2] = \"Delete\";\r\n})(ResourceActions || (ResourceActions = {}));\r\n//# sourceMappingURL=resource.js.map","/**\r\n * Enumerated possible authentication statuses.\r\n */\r\nexport var AuthenticationStatus;\r\n(function (AuthenticationStatus) {\r\n    /** Authentication failed. */\r\n    AuthenticationStatus[AuthenticationStatus[\"Error\"] = 0] = \"Error\";\r\n    /** Authentication is in progress. */\r\n    AuthenticationStatus[AuthenticationStatus[\"Continue\"] = 1] = \"Continue\";\r\n    /** Authentication is complete. */\r\n    AuthenticationStatus[AuthenticationStatus[\"Completed\"] = 2] = \"Completed\";\r\n})(AuthenticationStatus || (AuthenticationStatus = {}));\r\n//# sourceMappingURL=status.js.map","/**\r\n * Enumerates supported identity databases.\r\n */\r\nexport var Database;\r\n(function (Database) {\r\n    /** ActiveDirectory (AD) */\r\n    Database[\"AD\"] = \"AD\";\r\n    /** Lightweight Directory Service (LDS) */\r\n    Database[\"LDS\"] = \"ADLDS\";\r\n})(Database || (Database = {}));\r\n/**\r\n * A request for a identity claim.\r\n * The service will search an {@link ClaimRequest.attr | attribute} in a {@link ClaimRequest.database}\r\n * and return the attribute value as a claim {@link ClaimRequest.name | name} in a token.\r\n */\r\nexport class ClaimRequest {\r\n    /** Constructs a claim request. */\r\n    constructor(\r\n    /** A name of a claim to return. */\r\n    name, \r\n    /** A database to search for an attribute. */\r\n    db, \r\n    /** An attribute name to search. */\r\n    attr) {\r\n        this.name = name;\r\n        this.db = db;\r\n        this.attr = attr;\r\n    }\r\n}\r\n//# sourceMappingURL=claim.js.map","/** Enumerates supported actions that can be performed on user's attributes. */\r\nexport var AttributeAction;\r\n(function (AttributeAction) {\r\n    /** Clear an attribute's value. */\r\n    AttributeAction[AttributeAction[\"Clear\"] = 1] = \"Clear\";\r\n    /** Update an attribute's value.  */\r\n    AttributeAction[AttributeAction[\"Update\"] = 2] = \"Update\";\r\n    /** Append a value to the existing multi-value attribute. */\r\n    AttributeAction[AttributeAction[\"Append\"] = 3] = \"Append\";\r\n    /** Delete an attribute. */\r\n    AttributeAction[AttributeAction[\"Delete\"] = 4] = \"Delete\";\r\n})(AttributeAction || (AttributeAction = {}));\r\n/** Value type of a user's attribute. */\r\nexport var AttributeType;\r\n(function (AttributeType) {\r\n    /** The attribute can have a boolean value. */\r\n    AttributeType[AttributeType[\"Boolean\"] = 1] = \"Boolean\";\r\n    /** The attribute can have an integer value. */\r\n    AttributeType[AttributeType[\"Integer\"] = 2] = \"Integer\";\r\n    /** The attribute can have a text value. */\r\n    AttributeType[AttributeType[\"String\"] = 3] = \"String\";\r\n    /** The attribute can have a binary object value. */\r\n    AttributeType[AttributeType[\"Blob\"] = 4] = \"Blob\";\r\n})(AttributeType || (AttributeType = {}));\r\n/**\r\n * Represents a single attribute in an identity database.\r\n */\r\nexport class Attribute {\r\n    constructor(\r\n    /** An attribute type. */\r\n    type, \r\n    /** A list of attribute values. */\r\n    values) {\r\n        this.type = type;\r\n        this.values = values;\r\n    }\r\n}\r\n//# sourceMappingURL=attribute.js.map","/**\r\n * A context of an authentication.\r\n */\r\nexport class ContextualInfo {\r\n}\r\n/** Enumerates step-up triggers. */\r\nexport var TriggerName;\r\n(function (TriggerName) {\r\n    TriggerName[\"Behavior\"] = \"behavior\";\r\n    TriggerName[\"IP\"] = \"ip\";\r\n    TriggerName[\"Device\"] = \"device\";\r\n    TriggerName[\"AltusInstalled\"] = \"altusInstalled\";\r\n    TriggerName[\"Computer\"] = \"computer\";\r\n    TriggerName[\"Domain\"] = \"domain\";\r\n    TriggerName[\"User\"] = \"user\";\r\n    TriggerName[\"InsideFirewall\"] = \"insideFirewall\";\r\n    TriggerName[\"RemoteSession\"] = \"remoteSession\";\r\n})(TriggerName || (TriggerName = {}));\r\n//# sourceMappingURL=stepUp.js.map","/**\r\n * Maps Web Access service faults to the Javascript exception model\r\n */\r\nexport class ServiceError extends Error {\r\n    /** Constructs the object. */\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, new.target.prototype);\r\n    }\r\n    /** Creates a service error object from a {@link ServiceFault | service fault}. */\r\n    static fromServiceFault(fault) {\r\n        return new ServiceError(fault.error_code, fault.description);\r\n    }\r\n    /** Allows to distinguish transport errors (HTTP) from {@link ServiceFault | service faults}.\r\n     * @returns `true` if the error was a transport error (HTTP),\r\n     *          `false` if it was a {@link ServiceFault | service fault}.\r\n     */\r\n    isHttpError() { return this.code >= 400 && this.code < 600; }\r\n}\r\n//# sourceMappingURL=errors.js.map","export class Url {\r\n    constructor(base, path, query) {\r\n        this.href = Url.create(base, path, query);\r\n    }\r\n    static getSanitizedQuery(query) {\r\n        return Object\r\n            .keys(query)\r\n            .map(key => [key, query[key]]\r\n            .map(encodeURIComponent)\r\n            .join(\"=\"))\r\n            .join(\"&\");\r\n    }\r\n    static create(base, path, query) {\r\n        return base\r\n            + (path ? `/${encodeURIComponent(path)}` : \"\")\r\n            + (query ? `?${Url.getSanitizedQuery(query)}` : \"\");\r\n    }\r\n}\r\n//# sourceMappingURL=url.js.map","import { ServiceError } from '../common';\r\nimport { Url } from './url';\r\nexport class ServiceEndpoint {\r\n    constructor(endpointUrl, defaultRequest) {\r\n        this.defaultRequest = {\r\n            cache: \"no-cache\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n        };\r\n        this.endpointUrl = endpointUrl;\r\n        this.defaultRequest = defaultRequest || this.defaultRequest;\r\n    }\r\n    static handleResponse(response) {\r\n        return (response.ok) ?\r\n            response.json() :\r\n            ServiceEndpoint.handleError(response);\r\n    }\r\n    static handleError(response) {\r\n        if (response.status === 404) {\r\n            // DP WebServices dump all errors under a single 404 error\r\n            // (which is not a best choice as the same error may indicate wrong URL path).\r\n            // So we first try to get a \"fault\" JSON object from the response and use its\r\n            // error code and message. If the response is empty, we fallback to a\r\n            // regular HTTP response code and status text.\r\n            return response.json()\r\n                .then((fault) => {\r\n                throw (fault) ?\r\n                    new ServiceError(fault.error_code, fault.description) :\r\n                    new ServiceError(response.status, response.statusText);\r\n            });\r\n        }\r\n        throw new ServiceError(response.status, response.statusText);\r\n    }\r\n    get(path, query, request) {\r\n        return fetch(Url.create(this.endpointUrl, path, query), Object.assign({}, this.defaultRequest, request, { method: 'GET' }))\r\n            .then(ServiceEndpoint.handleResponse);\r\n    }\r\n    post(path, query, body, request) {\r\n        return fetch(Url.create(this.endpointUrl, path, query), Object.assign({}, this.defaultRequest, request, { method: 'POST' }, (body ? { body: JSON.stringify(body) } : {})))\r\n            .then(ServiceEndpoint.handleResponse);\r\n    }\r\n    put(path, query, body, request) {\r\n        return fetch(Url.create(this.endpointUrl, path, query), Object.assign({}, this.defaultRequest, request, { method: 'PUT' }, (body ? { body: JSON.stringify(body) } : {})))\r\n            .then(ServiceEndpoint.handleResponse);\r\n    }\r\n    // cannot use \"delete\" as it is a reserved Javascript word\r\n    del(path, query, body, request) {\r\n        return fetch(Url.create(this.endpointUrl, path, query), Object.assign({}, this.defaultRequest, request, { method: 'DELETE' }, (body ? { body: JSON.stringify(body) } : {})))\r\n            .then(ServiceEndpoint.handleResponse);\r\n    }\r\n    ping(path = 'Ping') {\r\n        return fetch(Url.create(this.endpointUrl, path), Object.assign({}, this.defaultRequest, { method: \"GET\" }))\r\n            .then(response => response.ok)\r\n            .catch(reason => false);\r\n    }\r\n}\r\n//# sourceMappingURL=endpoint.js.map","import { ServiceEndpoint } from './endpoint';\r\nexport class Service {\r\n    constructor(endpoint) {\r\n        this.endpoint = new ServiceEndpoint(endpoint);\r\n    }\r\n    Ping() {\r\n        return this.endpoint.ping();\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Ticket } from '@digitalpersona/core';\r\nimport { Service } from '../../private';\r\n/** DigitalPersona WebAuth (DPWebAuth) service client wrapper. */\r\nexport class AuthService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetUserCredentials(user) {\r\n        return this.endpoint\r\n            .get(\"GetUserCredentials\", { user: user.name, type: user.type })\r\n            .then(response => response.GetUserCredentialsResult);\r\n    }\r\n    /** @inheritdoc */\r\n    GetEnrollmentData(user, credentialId) {\r\n        return this.endpoint\r\n            .get(\"GetEnrollmentData\", { user: user.name, type: user.type, cred_id: credentialId })\r\n            .then(response => response.GetEnrollmentDataResult);\r\n    }\r\n    /** @inheritdoc */\r\n    Identify(credential) {\r\n        return this.endpoint\r\n            .post(\"IdentifyUser\", null, { credential })\r\n            .then(response => response.IdentifyUserResult);\r\n    }\r\n    /** @inheritdoc */\r\n    Authenticate(identity, credential) {\r\n        return (identity instanceof Ticket) ?\r\n            this.endpoint\r\n                .post(\"AuthenticateUserTicket\", null, { ticket: identity, credential })\r\n                .then(response => response.AuthenticateUserTicketResult)\r\n            : this.endpoint\r\n                .post(\"AuthenticateUser\", null, { user: identity, credential })\r\n                .then(response => response.AuthenticateUserResult);\r\n    }\r\n    /** @inheritdoc */\r\n    CustomAction(actionId, ticket, user, credential) {\r\n        return this.endpoint\r\n            .post(\"CustomAction\", null, { actionId, ticket, user, credential })\r\n            .then(response => response.CustomActionResult);\r\n    }\r\n    /** @inheritdoc */\r\n    CreateAuthentication(identity, credentialId) {\r\n        return (identity instanceof Ticket) ?\r\n            this.endpoint\r\n                .post(\"CreateTicketAuthentication\", null, { ticket: identity, credentialId })\r\n                .then(response => response.CreateTicketAuthenticationResult)\r\n            : this.endpoint\r\n                .post(\"CreateUserAuthentication\", null, { user: identity, credentialId })\r\n                .then(response => response.CreateUserAuthenticationResult);\r\n    }\r\n    /** @inheritdoc */\r\n    ContinueAuthentication(authId, authData) {\r\n        return this.endpoint\r\n            .post(\"ContinueAuthentication\", null, { authId, authData })\r\n            .then(response => response.ContinueAuthenticationResult);\r\n    }\r\n    /** @inheritdoc */\r\n    DestroyAuthentication(authId) {\r\n        return this.endpoint\r\n            .del(\"DestroyAuthentication\", null, { authId });\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","/**\r\n * Client-side authentication data used by the {@link IAuthenticationClient} during authentication handshake.\r\n */\r\nexport class AuthenticationData {\r\n}\r\n//# sourceMappingURL=data.js.map","import { Service } from '../../private';\r\n/**\r\n * DigitalPersona Web Claims (DPWebClaims) service client wrapper.\r\n */\r\nexport class ClaimsService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetConfiguredClaims(ticket) {\r\n        return this.endpoint\r\n            .post(\"GetConfiguredClaims\", null, { ticket })\r\n            .then(result => result.GetConfiguredClaimsResult.ticket);\r\n    }\r\n    /** @inheritdoc */\r\n    GetClaims(ticket, request) {\r\n        return this.endpoint\r\n            .post(\"GetClaims\", null, { ticket, request })\r\n            .then(result => result.GetClaimsResult.ticket);\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Service } from '../../private';\r\n/**\r\n * DigitalPersona Web Enroll (DPWebEnroll) service client wrapper.\r\n */\r\nexport class EnrollService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetUserCredentials(user) {\r\n        return this.endpoint\r\n            .get(\"GetUserCredentials\", { user: user.name, type: user.type })\r\n            .then(result => result.GetUserCredentialsResult);\r\n    }\r\n    /** @inheritdoc */\r\n    GetEnrollmentData(user, credentialId) {\r\n        return this.endpoint\r\n            .get(\"GetEnrollmentData\", { user: user.name, type: user.type, cred_id: credentialId })\r\n            .then(result => result.GetEnrollmentDataResult);\r\n    }\r\n    /** @inheritdoc */\r\n    CreateUser(secOfficer, user, password) {\r\n        return this.endpoint\r\n            .put(\"CreateUser\", null, { secOfficer, user, password });\r\n    }\r\n    /** @inheritdoc */\r\n    DeleteUser(secOfficer, user) {\r\n        return this.endpoint\r\n            .del(\"DeleteUser\", null, { secOfficer, user });\r\n    }\r\n    /** @inheritdoc */\r\n    EnrollUserCredentials(secOfficer, owner, credential) {\r\n        return this.endpoint\r\n            .put(\"EnrollUserCredentials\", null, { secOfficer, owner, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    DeleteUserCredentials(secOfficer, owner, credential) {\r\n        return this.endpoint\r\n            .del(\"DeleteUserCredentials\", null, { secOfficer, owner, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    EnrollAltusUserCredentials(secOfficer, user, credential) {\r\n        return this.endpoint\r\n            .put(\"EnrollAltusUserCredentials\", null, { secOfficer, user, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    DeleteAltusUserCredentials(secOfficer, user, credential) {\r\n        return this.endpoint\r\n            .del(\"DeleteAltusUserCredentials\", null, { secOfficer, user, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    GetUserAttribute(ticket, user, attributeName) {\r\n        return this.endpoint\r\n            .post(\"GetUserAttribute\", null, { ticket, user, attributeName })\r\n            .then(result => result.GetUserAttributeResult);\r\n    }\r\n    /** @inheritdoc */\r\n    PutUserAttribute(ticket, user, attributeName, action, attributeData) {\r\n        return this.endpoint\r\n            .put(\"PutUserAttribute\", null, { ticket, user, attributeName, action, attributeData });\r\n    }\r\n    /** @inheritdoc */\r\n    UnlockUser(user, credential) {\r\n        return this.endpoint\r\n            .post(\"UnlockUser\", null, { user, credential });\r\n    }\r\n    /** @inheritdoc */\r\n    CustomAction(ticket, user, credential, actionId) {\r\n        return this.endpoint\r\n            .post(\"CustomAction\", null, { ticket, user, credential, actionId })\r\n            .then(result => result.CustomActionResult);\r\n    }\r\n    /** @inheritdoc */\r\n    IsEnrollmentAllowed(secOfficer, user, credentialId) {\r\n        return this.endpoint\r\n            .post(\"IsEnrollmentAllowed\", null, { secOfficer, user, credentialId });\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Service } from '../../private';\r\n/**\r\n * DigitalPersona Web Policy (DPWebPolicy) service client wrapper.\r\n */\r\nexport class PolicyService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetPolicyInfo(user, resourceUri, action, info) {\r\n        return this.endpoint\r\n            .post(\"GetPolicyInfo\", null, { user, resourceUri, action, info })\r\n            .then(result => result.GetPolicyInfoResult);\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map","import { Service } from '../../private';\r\n/**\r\n * DigitalPersona Web Secret (DPWebSecret) service client wrapper.\r\n */\r\nexport class SecretService extends Service {\r\n    /** Constructs a service wrapper.\r\n     * @param endpointUrl - a URL to the DPWebClaims service.\r\n     */\r\n    constructor(endpointUrl) {\r\n        super(endpointUrl);\r\n    }\r\n    /** @inheritdoc */\r\n    GetAuthPolicy(user, secretName, action) {\r\n        return this.endpoint\r\n            .get(\"GetAuthPolicy\", { user: user.name, type: user.type, secretName, action })\r\n            .then(result => result.GetAuthPolicyResult);\r\n    }\r\n    /** @inheritdoc */\r\n    DoesSecretExist(user, secretName) {\r\n        return this.endpoint\r\n            .get(\"DoesSecretExist\", { user: user.name, type: user.type, secretName })\r\n            .then(result => result.DoesSecretExistResult);\r\n    }\r\n    /** @inheritdoc */\r\n    ReadSecret(ticket, secretName) {\r\n        return this.endpoint\r\n            .post(\"ReadSecret\", null, { ticket, secretName })\r\n            .then(result => result.ReadSecretResult);\r\n    }\r\n    /** @inheritdoc */\r\n    WriteSecret(ticket, secretName, secretData) {\r\n        return this.endpoint\r\n            .put(\"WriteSecret\", null, { ticket, secretName, secretData });\r\n    }\r\n    /** @inheritdoc */\r\n    DeleteSecret(ticket, secretName) {\r\n        return this.endpoint\r\n            .del(\"DeleteSecret\", null, { ticket, secretName });\r\n    }\r\n}\r\n//# sourceMappingURL=service.js.map"],"names":["ResourceActions","AuthenticationStatus","Database","AttributeAction","AttributeType","TriggerName","ServiceError","Error","[object Object]","code","message","super","this","Object","setPrototypeOf","prototype","fault","error_code","description","Url","base","path","query","href","create","keys","map","key","encodeURIComponent","join","getSanitizedQuery","ServiceEndpoint","endpointUrl","defaultRequest","cache","mode","headers","Content-Type","Accept","response","json","handleError","status","then","statusText","request","fetch","assign","method","handleResponse","body","JSON","stringify","ok","catch","reason","Service","endpoint","ping","type","values","user","get","name","GetUserCredentialsResult","credentialId","cred_id","GetEnrollmentDataResult","credential","post","IdentifyUserResult","identity","Ticket","ticket","AuthenticateUserTicketResult","AuthenticateUserResult","actionId","CustomActionResult","CreateTicketAuthenticationResult","CreateUserAuthenticationResult","authId","authData","ContinueAuthenticationResult","del","db","attr","result","GetConfiguredClaimsResult","GetClaimsResult","secOfficer","password","put","owner","attributeName","GetUserAttributeResult","action","attributeData","resourceUri","info","GetPolicyInfoResult","secretName","GetAuthPolicyResult","DoesSecretExistResult","ReadSecretResult","secretData"],"mappings":"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"}